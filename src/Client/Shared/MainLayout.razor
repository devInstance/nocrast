@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@inject TasksService TService;
@inject TasksService RService;

<AuthorizeView>
    <Authorized>
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            <div class="top-row px-4">
                @if (!String.IsNullOrEmpty(ErrorText))
                {
                    <label class="text-danger">@ErrorText</label>
                }
                <button type="button" class="btn btn-link ml-md-auto" @onclick="@LogoutClick">Logout</button>
            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@functions{

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; }

    string ErrorText { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (!(await AuthenticationState).User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        }
    }

    protected override void OnInitialized()
    {
        TService.ErrorHasOccured += OnError;
        RService.ErrorHasOccured += OnError;
    }

    private void OnError(Object sender, ServiceErrorEventArgs e)
    {
        if (e.IsNetworkError)
        {
            //ErrorText = e.Message;
            ErrorText = $"Error connecting to the server {e.Message}";
        }
        else
        {
            ErrorText = "";
        }
        StateHasChanged();
    }


    async Task LogoutClick()
    {
        await authStateProvider.LogoutAsync();
        navigationManager.NavigateTo("/login");
    }
}